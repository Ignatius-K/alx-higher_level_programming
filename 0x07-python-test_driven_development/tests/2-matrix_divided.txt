The ``2-matrix_divided`` module
===============================

``matrix_divided``
==================

``matrix_divided(matrix, divisor)`` divides mtrix by divisor
and returns new matrix

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Usage
-----
	
	>>> matrix = [[1, 2], [1, 2]]
	
	>>> matrix_divided(matrix, 1)
	[[1.0, 2.0], [1.0, 2.0]]

	>>> matrix_divided(matrix, 2)
	[[0.5, 1.0], [0.5, 1.0]]

::
	The function has 2 positional arguments ie matrix, divisor
	
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

::
	The argument ``div`` aka divisor follows some rules, 
	1. expects an int or float type
	
	>>> divisor = "Not a number" 
	>>> matrix_divided(matrix, divisor)
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	2. non-zero

	>>> divisor = float('0')
	>>> matrix_divided(matrix, divisor)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

	3. Float type 'NaN'
	>>> divisor = float('nan')
	>>> matrix_divided(matrix, divisor) #doctest: +ELLIPSIS
	Traceback (most recent call last):
	...
	ValueError: ...

::
	The ``matrix`` argument also has some expectations
	1. Should be a list of lists (each comprising integers or floats)

	>>> matrix_divided("Not a list", 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = ["helllo", [1 , 2]]
	>>> matrix_divided(matrix, 1)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [["Hello"]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	2. Rows should be of same length

	>>> matrix = [[1, 2], [1, 2, 3]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

























